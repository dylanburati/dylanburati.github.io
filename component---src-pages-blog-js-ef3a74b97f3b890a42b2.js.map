{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["BlogListing","props","date","split","month","day","className","style","background","calendarColor","minHeight","href","title","subtitle","BlogPage","allPostData","allMarkdownRemark","edges","map","node","frontmatter","yearStr","fields","slug","year","parseInt","allPosts","reduce","acc","cur","i","n","push","key","toString","length","Date","getFullYear"],"mappings":"mLAsBA,SAASA,EAAYC,GAAQ,IAAD,EACLA,EAAMC,KAAKC,MAAM,KAA/BC,EADmB,KACZC,EADY,KAE1B,OACE,yBAAKC,UAAU,0BACb,yBAAKA,UAAU,sDACb,yBAAKA,UAAU,gBAAgBF,GAC/B,yBAAKE,UAAU,uBACXC,MAAO,CAAEC,WAAYP,EAAMQ,cAAeC,UAAW,SACvD,0BAAMJ,UAAU,mDAAmDD,KAGvE,yBAAKC,UAAU,wBACb,uBAAGA,UAAU,wCAAwCK,KAAMV,EAAMU,MAAOV,EAAMW,OAC9E,uBAAGN,UAAU,sBACVL,EAAMY,YA4EFC,UA7DE,WACf,IAmBMC,EAnBI,OAmBeC,kBAAkBC,MAAMC,KAAI,YAAa,IAAXC,EAAU,EAAVA,KAAU,EACvCA,EAAKC,YAAYlB,KAAKC,MAAM,KAA7CD,EADwD,KAClDmB,EADkD,KAE/D,MAAO,CACLV,KAAMQ,EAAKG,OAAOC,KAClBX,MAAOO,EAAKC,YAAYR,MACxBV,OACAsB,KAAMC,SAASJ,EAAS,IACxBR,SAAUM,EAAKC,YAAYP,aAIzBa,EAAW,GAmBjB,OAlBAX,EAAYY,QAAO,SAACC,EAAKC,EAAKC,GA1EhC,IAAkBC,EAyFd,OAdGF,EAAIL,KAAOI,GACZF,EAASM,KACP,wBAAIC,IAAKJ,EAAIL,KAAKU,WAAY5B,UAAU,aAAauB,EAAIL,OAG7DE,EAASM,KACP,kBAAChC,EAAD,CAAaiC,IAAKJ,EAAIlB,KAClBA,KAAMkB,EAAIlB,KACVC,MAAOiB,EAAIjB,MACXR,MAAOyB,EAAIzB,MACXF,KAAM2B,EAAI3B,KACVO,eAtFQsB,EAsFgBhB,EAAYoB,OAASL,EArF9C,CACL,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YACK,EAAJC,EAAQ,GAAK,IA6ERlB,SAAUgB,EAAIhB,YAEbgB,EAAIL,QACT,IAAIY,MAAQC,eAGd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKzB,MAAM,SACX,kBAAC,IAAD,CAASN,UAAU,aACjB,wBAAIA,UAAU,iBAAd,kBACCoB,M","file":"component---src-pages-blog-js-ef3a74b97f3b890a42b2.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport \"../css/styles.css\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Section from \"../components/section\"\n\nfunction getColor(n) {\n  return [\n    \"#e53e3e\",\n    \"#dd6b20\",\n    \"#d69e2e\",\n    \"#38a169\",\n    \"#319795\",\n    \"#3182ce\",\n    \"#5a67d8\",\n    \"#805ad5\"\n  ][(n * 5 + 3) % 8];\n}\n\nfunction BlogListing(props) {\n  const [month, day] = props.date.split(' ');\n  return (\n    <div className=\"flex items-center mb-4\">\n      <div className=\"flex flex-col h-full mr-3 mt-px border text-center\">\n        <div className=\"w-12 text-sm\">{month}</div>\n        <div className=\"w-12 flex-grow table\"\n            style={{ background: props.calendarColor, minHeight: '2rem' }}>\n          <span className=\"table-cell align-middle inline-block text-white\">{day}</span>\n        </div>\n      </div>\n      <div className=\"flex flex-col flex-1\">\n        <a className=\"hover:underline text-xl font-semibold\" href={props.href}>{props.title}</a>\n        <p className=\"mb-0 text-gray-700\">\n          {props.subtitle}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nBlogListing.propTypes = {\n  calendarColor: PropTypes.string,\n  date: PropTypes.string,\n  href: PropTypes.string,\n  title: PropTypes.string,\n  subtitle: PropTypes.string\n}\n\nconst BlogPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              subtitle\n              date(formatString: \"MMM DD,YYYY\")\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const allPostData = data.allMarkdownRemark.edges.map(({node}) => {\n    const [date, yearStr] = node.frontmatter.date.split(',');\n    return {\n      href: node.fields.slug,\n      title: node.frontmatter.title,\n      date,\n      year: parseInt(yearStr, 10),\n      subtitle: node.frontmatter.subtitle\n    }\n  });\n\n  const allPosts = [];\n  allPostData.reduce((acc, cur, i) => {\n    if(cur.year < acc) {\n      allPosts.push(\n        <h3 key={cur.year.toString()} className=\"mb-3 mt-6\">{cur.year}</h3>\n      );\n    }\n    allPosts.push(\n      <BlogListing key={cur.href}\n          href={cur.href}\n          title={cur.title}\n          month={cur.month}\n          date={cur.date}\n          calendarColor={getColor(allPostData.length - i)}\n          subtitle={cur.subtitle} />\n    );\n    return cur.year;\n  }, (new Date()).getFullYear());\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Section className=\"px-5 mt-6\">\n        <h2 className=\"text-3xl mb-3\">Recent Updates</h2>\n        {allPosts}\n      </Section>\n    </Layout>\n  );\n}\n\nexport default BlogPage\n"],"sourceRoot":""}